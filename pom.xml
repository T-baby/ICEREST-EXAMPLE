<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>


  <groupId>com.cybermkd</groupId>
  <artifactId>ICEREST-EXAMPLE</artifactId>
  <version>1.0.1</version>
  <name>ICEREST-EXAMPLE</name>
  <description>ICEREST简易例子</description>
  <url>https://github.com/T-baby/ICEREST-EXAMPLE</url>

  <issueManagement>
    <system>Github Issue</system>
    <url>https://github.com/T-baby/ICEREST-EXAMPLE/issues</url>
  </issueManagement>

  <licenses>
    <license>
      <name>The Apache Software License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
    </license>
  </licenses>


  <developers>
    <developer>
      <name>t-baby</name>
      <email>t-baby@zomake.com</email>
      <organization>CYBERMKD</organization>
      <organizationUrl>http://www.cybermkd.com</organizationUrl>
    </developer>
  </developers>

  <scm>
    <connection>scm:git@github.com:T-baby/ICEREST-EXAMPLE.git</connection>
    <developerConnection>scm:git@github.com:T-baby/ICEREST-EXAMPLE.git</developerConnection>
    <url>git@github.com:T-baby/ICEREST-EXAMPLE.git</url>
  </scm>

  <properties>
    <project.build.sourceEncoding>utf-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>utf-8</project.reporting.outputEncoding>
  </properties>


  <dependencies>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.10</version>
      <scope>test</scope>
    </dependency>


    <!--日志支持-->
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>1.1.2</version>
    </dependency>

    <dependency>
      <groupId>com.alibaba</groupId>
      <artifactId>fastjson</artifactId>
      <version>1.2.7</version>
    </dependency>

    <!--spring-->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context</artifactId>
      <version>4.2.4.RELEASE</version>
    </dependency>

    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>javax.servlet-api</artifactId>
      <version>3.1.0</version>
    </dependency>

    <!--jetty-->
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-server</artifactId>
      <version>8.1.8.v20121106</version>
    </dependency>

    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-webapp</artifactId>
      <version>8.1.8.v20121106</version>
    </dependency>

    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-io</artifactId>
      <version>8.1.8.v20121106</version>
    </dependency>


    <!--让输出更有趣-->
    <dependency>
      <groupId>org.fusesource.jansi</groupId>
      <artifactId>jansi</artifactId>
      <version>1.13</version>
    </dependency>

    <!--ICEREST-->
    <dependency>
      <groupId>com.cybermkd</groupId>
      <artifactId>ICEREST</artifactId>
      <version>1.0.1.2</version>
    </dependency>

    <dependency>
      <groupId>com.cybermkd</groupId>
      <artifactId>ICEREST-PLUGIN</artifactId>
      <version>1.0.0</version>
    </dependency>

    <dependency>
      <groupId>com.cybermkd</groupId>
      <artifactId>MongodbPlugin</artifactId>
      <version>1.0.6.3</version>
    </dependency>




  </dependencies>
  <build>

    <finalName>tarice</finalName>

    <!-- 解决idea下maven项目不复制配置文件到classpath下的问题 -->
    <resources>
      <resource>
        <directory>src/main/java</directory>
        <excludes>
          <exclude>**/*.java</exclude>
        </excludes>
        <includes>
          <include>**/*.xml</include>
          <include>**/*.txt</include>
          <include>**/*.properties</include>
          <include>**/*.log</include>
        </includes>
      </resource>
      <resource>
        <directory>src/main/resources</directory>
      </resource>
    </resources>



    <plugins>
      <plugin>
        <artifactId>kotlin-maven-plugin</artifactId>
        <groupId>org.jetbrains.kotlin</groupId>
        <version>1.0.2-1</version>
        <executions>
          <execution>
            <id>compile</id>
            <goals> <goal>compile</goal> </goals>
          </execution>

          <execution>
            <id>test-compile</id>
            <goals> <goal>test-compile</goal> </goals>
          </execution>
        </executions>
      </plugin>


      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>2.3.2</version>
        <configuration>
          <source>1.8</source>
          <target>1.8</target>
          <encoding>UTF-8</encoding>
        </configuration>
      </plugin>


      <plugin>
        <groupId>org.eclipse.jetty</groupId>
        <artifactId>jetty-maven-plugin</artifactId>
        <version>9.2.1.v20140609</version>
        <configuration>
          <contextXml>${project.basedir}/src/main/resources/jetty-context.xml</contextXml>
        </configuration>
      </plugin>

      <plugin>
        <artifactId>maven-war-plugin</artifactId>
        <version>2.6</version>
        <configuration>
          <failOnMissingWebXml>false</failOnMissingWebXml>
          <webappDirectory>
            target/${artifactId}
          </webappDirectory>
          <warSourceDirectory>
            src/main/webapp
          </warSourceDirectory>
          <webResources>
            <resource>
              <directory>src/main/webapp/WEB-INF</directory>
              <targetPath>WEB-INF</targetPath>
              <filtering>true</filtering>
              <includes>
                <include>web.xml</include>
              </includes>
            </resource>
            <!-- 解决本地jar无法被导出的问题 -->
            <resource>
              <directory>${project.basedir}/src/main/webapp/WEB-INF/lib</directory>
              <targetPath>WEB-INF/lib</targetPath>
              <filtering>true</filtering>
              <includes>
                <include>**/*.jar</include>
              </includes>
            </resource>
          </webResources>
        </configuration>
      </plugin>


    </plugins>

  </build>



</project>
